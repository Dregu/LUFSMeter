general
=======

also try to use a ringbuffer instead of the accumulators and measure the efficiency.


vu meter
========

(source: http://www.rawmaterialsoftware.com/viewtopic.php?f=2&t=297&hilit=meter)

    - Have you made sure that your meter components are opaque? If they're not, then all their parent components will have to get repainted every time, which can create enormous overheads. Check out the setOpaque() method in Component. 

    - Also, to speed them up in tracktion I keep an image buffered and just draw that each time rather than rendering the colour gradients. 

    - And obviously only paint the smallest bit that's changed - to help with debugging all this, try turning on the JUCE_ENABLE_REPAINT_DEBUGGING flag in juce_Config.h, which will draw little coloured rectangles around the bits that get drawn, so you can see what's going on.

source: http://www.rawmaterialsoftware.com/viewtopic.php?f=2&t=611&hilit=meter :

    - Your setValue() method has to be smarter, and call repaint() for only the smallest rectangle that will have changed by the change in value - so if your bar moves up one pixel, just repaint that bit. If it's a needle, call repaint for only the smallest rectangle that holds the new needle position.


Look and feel:
http://www.rawmaterialsoftware.com/viewtopic.php?f=2&t=8368&hilit=lookandfeel
